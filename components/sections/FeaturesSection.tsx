"use client";

import { motion } from "framer-motion";
import { useInView } from "framer-motion";
import { useRef } from "react";

const features = [
  {
    id: 1,
    title: "–†–æ—Å–∫–æ—à—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç",
    description: "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ –≤–∏–ª–ª—ã —Å –≤—ã—Å–æ—á–∞–π—à–∏–º —É—Ä–æ–≤–Ω–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–∞",
    icon: "üè∞",
  },
  {
    id: 2,
    title: "–ü–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –≤–∏–¥—ã",
    description: "–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø–∞–Ω–æ—Ä–∞–º—ã –æ–∫–µ–∞–Ω–∞ –∏ –ø—Ä–∏—Ä–æ–¥—ã",
    icon: "üåÖ",
  },
  {
    id: 3,
    title: "–ë–µ–∑—É–ø—Ä–µ—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å",
    description: "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
    icon: "‚≠ê",
  },
  {
    id: 4,
    title: "–£–µ–¥–∏–Ω–µ–Ω–∏–µ",
    description: "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è",
    icon: "üå¥",
  },
];

const container = {
  hidden: { opacity: 0 },
  show: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
    },
  },
};

const item = {
  hidden: { opacity: 0, y: 20 },
  show: { opacity: 1, y: 0 },
};

export default function FeaturesSection() {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  return (
    <section className="py-20 px-8 bg-white" ref={ref}>
      <div className="max-w-6xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å
          </h2>
          <p className="text-xl text-gray-600">
            –ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ—Ç–¥—ã—Ö –¥–ª—è –Ω–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π
          </p>
        </motion.div>

        <motion.div
          variants={container}
          initial="hidden"
          animate={isInView ? "show" : "hidden"}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8"
        >
          {features.map((feature) => (
            <motion.div
              key={feature.id}
              variants={item}
              whileHover={{ scale: 1.05, y: -5 }}
              className="bg-gradient-to-br from-blue-50 to-indigo-50 p-8 rounded-2xl text-center hover:shadow-xl transition-shadow"
            >
              <div className="text-5xl mb-4">{feature.icon}</div>
              <h3 className="text-xl font-bold text-gray-900 mb-2">
                {feature.title}
              </h3>
              <p className="text-gray-600">{feature.description}</p>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  );
}
